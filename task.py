# -*- coding: utf-8 -*-
"""TASK.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dw2x4ZiRNrCGGRCTBe5x5Nqh53l16QRd

I used 3 differnt classification model here from sklearn library and I cheched accuracy of all model and in terms of accuracy **Random Forest Classification** works Fine
"""

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.preprocessing import FunctionTransformer
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.pipeline import Pipeline

from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.svm import SVC

# Loading Data

data = pd.read_csv('/content/data.csv')
data.dropna(inplace=True)
data.drop_duplicates(inplace=True)

# Train/Test split
x = data.file_body
y = data.language
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

token_pattern = r"""(\b[A-Za-z_]\w*\b|[!\#\$%\&\*\+:\-\./<=>\?@\\\^_\|\~]+|[ \t\(\),;\{\}\[\]`"'])"""
vectorizer = TfidfVectorizer(token_pattern=token_pattern, max_features=5000)
classifier = RandomForestClassifier(n_estimators = 300, criterion = 'entropy', random_state = 0)
# classifier.fit(x_train, y_train)

pipe = Pipeline([
    ('vectorizer', vectorizer),
    ('clf', classifier)])
pipe.fit(x_train, y_train)

print(f'Accuracy: {pipe.score(x_test, y_test)}')

classifier = DecisionTreeClassifier(criterion = 'entropy', random_state =0)
pipe1 = Pipeline([
    ('vectorizer', vectorizer),
    ('clf', classifier)])
pipe1.fit(x_train, y_train)

print(f'Accuracy: {pipe1.score(x_test, y_test)}')

classifier = SVC(kernel= 'linear', random_state= 0)
pipe2 = Pipeline([
    ('vectorizer', vectorizer),
    ('clf', classifier)])
pipe2.fit(x_train, y_train)

print(f'Accuracy: {pipe2.score(x_test, y_test)}')

